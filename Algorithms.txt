public static int[] SearchSum(int[] nums, int target)
        {
            int[] result = new int[2];
            Array.Sort(nums);
            for(int i = 0; i < nums.Length; i++)
            {
                result[0] = i;
                for(int j = i + 1; j < nums.Length; j++)
                {
                    if(nums[i] + nums[j] == target)
                    {
                        result[1] = j;
                        return result;
                    }
                }
            }
            result[0] = 0;
            return result;
        }

        public static int RomanToInteger(string romanString)
        {
            Dictionary<char, int> romanIntegerDictionary = new Dictionary<char, int>()
            {
                { 'I', 1},
                { 'V', 5},
                { 'X', 10},
                { 'L', 50},
                { 'C', 100},
                { 'D', 500},
                { 'M', 1000}

            };
            int result = 0;
            foreach(char ch in romanString)
            {
                result += romanIntegerDictionary[ch];
            }
            return result;
        }

        public static bool IsPalindrom(string inputString)
        {
            string reverseString = "";
            for(int i= inputString.Length - 1; i >= 0; i--)
            {
                reverseString += inputString[i];
            }
            if(reverseString == inputString)
            {
                return true;
            }
            return false;
        }